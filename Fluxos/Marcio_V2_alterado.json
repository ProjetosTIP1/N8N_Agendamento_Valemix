{
  "name": "Marcio V2",
  "nodes": [
    {
      "parameters": {},
      "type": "@devlikeapro/n8n-nodes-waha.wahaTrigger",
      "typeVersion": 202502,
      "position": [
        -2700,
        400
      ],
      "id": "ab19821c-c061-4c60-a03d-7aa67b1c9886",
      "name": "WAHA Trigger",
      "webhookId": "64a2de0e-e41b-4597-9610-0d3084570a81"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=ESTA É A CONVERSA: {{ $json.mensagem }}",
        "options": {
          "systemMessage": "=🎭 Função de assistente:\nVocê é um Assistente de Análise de Mensagens que avalia cada mensagem do cliente para determinar se ela precisa:\n\nFaça uma reserva ou agendamento de entrega.\nFaça uma reclamação.\nSua resposta determinará o fluxo em n8n:\n\n“VERDADEIRO” → O fluxo continua.\n\"FALSO\" → O fluxo termina.\n\n📜 Instruções:\nAnalise a mensagem do cliente.\nSe a mensagem mencionar uma reserva ou programação, cronograma de entrega ou reclamação, responda apenas com \"VERDADEIRO\".\nCaso a mensagem não mencione reserva ou reclamação responda apenas com “FALSO”.\nSe você já respondeu \"VERDADEIRO”, continue retornando \"TRUE\" em cada mensagem até que o assistente responsável termine seu processo em n8n.\nQuando o assistente responsável terminar, pare de responder \"TRUE\".\n\n⚠️ Regras:\nNão responda com outra palavra ou frase, apenas “VERDADEIRO” ou “FALSO”.\nNão explique nem confirme a resposta.\nNão altere “FALSE” para “TRUE” se a mensagem inicial não contiver reserva ou reclamação.\n🔍 Exemplo de comportamento em n8n:\n<exemplo> \n👤 Cliente: “Quero agendar a entrega do meu material para amanhã.” \n🤖 Assistente: \"TRUE\" (o fluxo em n8n continua ao longo do caminho de reserva/reivindicação.)\n\n👤 Cliente: “Será à tarde”.\n🤖 Assistente: \"VERDADEIRO\" (Enquanto o assistente responsável ainda estiver em processo.)\n\n👤 Cliente: \"Meu nome é Márcio Azevedo.\"\n🤖 Assistente: \"VERDADEIRO\" (siga o processo.)\n\n👤 Cliente: \"Pronto, isso seria tudo.\" (O assistente em n8n termina.)\n🤖 Assistente: (para de responder \"VERDADEIRO\", o fluxo termina.)\n\n👤 Cliente: \"Olá, como vai?\"\n🤖 Assistente: “FALSO” (O fluxo em n8n termina aqui.)\n</exemplo>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1820,
        400
      ],
      "id": "1c24a395-a1d6-4025-9778-1aeb4fad32fe",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1920,
        580
      ],
      "id": "b7f5b103-8081-43e2-8721-ccf2f1b90b2c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "P34Q5LzomCLBCF7A",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.from }}",
        "sessionTTL": 300,
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        -1780,
        620
      ],
      "id": "71bde80d-963a-4cbf-922b-92fadf145c86",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "R3gMrcjTPNyFGMqg",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "authentication": "genericCredentialType"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -1540,
        620
      ],
      "id": "dd977edf-c9c6-4156-93c1-a3879d4f5ff4",
      "name": "HTTP Request",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "65488564-5597-4a2c-af01-5f0d0cf99ea4",
              "leftValue": "={{ $json.output }}",
              "rightValue": "VERDADEIRO",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1460,
        400
      ],
      "id": "a63c31d3-20fd-466f-8ebd-3a831e9323d6",
      "name": "If"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -1240,
        280
      ],
      "id": "ebe8c1c6-9925-4616-8db4-cbbf181271e7",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3989ec24-1261-4f59-982b-72fd06198381",
              "name": "from",
              "value": "={{ $('Captura_Mensagem').item.json.from.substring(2,4) }}9{{ $('Captura_Mensagem').item.json.from.substring(4,12) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1080,
        280
      ],
      "id": "a1dde741-09b5-4188-83d9-4184669a864f",
      "name": "Formata_Telefone"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2e065f4e-b646-47f4-8f62-4c009c10e2e5",
              "name": "session",
              "value": "={{ $json.session }}",
              "type": "string"
            },
            {
              "id": "a3676208-8493-466e-b2a9-8e885b39f338",
              "name": "from",
              "value": "={{ $json.payload.from }}",
              "type": "string"
            },
            {
              "id": "5f23231d-a6ef-48b3-9054-040167eb8868",
              "name": "mensagem",
              "value": "={{ $json.payload.body }}",
              "type": "string"
            },
            {
              "id": "d7bdbe94-1d95-4eaf-99fb-3ab202ca4706",
              "name": "id_mensagem",
              "value": "={{ $json.payload.id }}",
              "type": "string"
            },
            {
              "id": "a4bcff2c-16a7-4455-bf70-e8dc5ef2ad2a",
              "name": "messageType",
              "value": "={{ \n    $json.payload.hasMedia \n        ? ($json.payload.media.mimetype.startsWith(\"image\") \n            ? \"image\" \n            : ($json.payload.media.mimetype.startsWith(\"audio\") \n                ? \"audio\" \n                : \"other_media\")) \n        : \"text\"\n}}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2300,
        400
      ],
      "id": "2a9a44dc-c06f-4129-bc0e-561a1a14353a",
      "name": "Captura_Mensagem"
    },
    {
      "parameters": {
        "resource": "Chatting",
        "operation": "Send Seen",
        "chatId": "={{ $json.from }}",
        "messageId": "={{ $json.id_mensagem }}",
        "participant": "",
        "requestOptions": {}
      },
      "type": "@devlikeapro/n8n-nodes-waha.WAHA",
      "typeVersion": 202502,
      "position": [
        -2140,
        220
      ],
      "id": "6152edb5-94d6-4812-a046-24ccbfa89077",
      "name": "Marca_Visualizacao",
      "credentials": {
        "wahaApi": {
          "id": "x51fih2shQhRra4Q",
          "name": "WAHA account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  return {\n    json: {\n        customerName: item.json.data.page_items.map(p => p.customer.name),\n        customerCode: item.json.data.page_items.map(p => p.customer.code),\n        customerId: item.json.data.page_items.map(p => p.customer.id)\n    }\n  }\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -720,
        280
      ],
      "id": "5e4faa07-9486-477d-97ad-7ad769e8d00c",
      "name": "Code",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.debugMessageType }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "7bfab073-e0ca-4d36-9e2a-817378e450a9"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "615af114-9e88-4495-90d8-aceedd03a643",
                    "leftValue": "={{ $json.debugMessageType }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e92e8ff9-cc7d-44a5-8e57-f6cb5fab020d",
                    "leftValue": "={{ $json.debugMessageType }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "51902449-461a-4875-a52b-024d21dea546",
                    "leftValue": "={{ $json.debugMessageType }}",
                    "rightValue": "other_media",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outro"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -360,
        260
      ],
      "id": "461d82de-6ee8-4cb1-a604-cf8965e00321",
      "name": "Switch",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a96e6489-94a1-44c0-a991-dcd6515596e3",
              "name": "debugMessageType",
              "value": "={{ $('Captura_Mensagem').item.json.messageType.replace(/\\n/g, \"\").trim() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -560,
        280
      ],
      "id": "cb359ec0-6976-4c28-8aba-11352775aa93",
      "name": "TipoMensagem"
    },
    {
      "parameters": {
        "url": "=https://integration.readymix.io/api/sync/projects?contact_phone_number={{ $('Formata_Telefone').item.json.from }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -900,
        280
      ],
      "id": "06289ae1-09d3-4fe2-82af-c5db68a9e248",
      "name": "Loop_Project_ContactPhoneNumber",
      "credentials": {
        "httpHeaderAuth": {
          "id": "cxexuqhR4R8NRjo6",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=mensagem: {{ $('Captura_Mensagem').item.json.mensagem }};\ndata e hora atuais: {{ $('Date & Time').item.json.currentDate }}\nProjetos associados: {{ $('Code').item.json.customerName }}\nnome do cliente: {{ $('WAHA Trigger').item.json.me.pushName }}\nendereço: {{ $('Loop_Project_ContactPhoneNumber').item.json.data.page_items[0].address.address_full }}\n",
        "options": {
          "systemMessage": "=🎭 Papel do Assistente\nVocê é um assistente virtual especializado em logística do Pedreira Um Valemix, empresa que atua no setor de Concretos Pré-Misturados, \ncontando com uma moderna frota de caminhões betoneira e bomba-lança, bem como laboratórios que realizam o controle tecnológico do concreto. \nEstruturada para produzir o concreto que o cliente desejar, a Valemix dispõe de uma equipe de assistentes técnico-comerciais que visitam as obras, \ncoletando todas as informações necessárias a um perfeito atendimento. \nSua principal função é atuar como intermediário entre os clientes e a equipe de logística, garantindo que:\n\nCumprimentar de forma adequada ao contexto, mantendo um tom respeitoso e natural.\nVocê imita a maneira de falar e escrever da pessoa que estava atendendo o cliente antes de agir. Se o cliente usar linguagem formal, ela permanece a mesma. \nSe ele usar abreviaturas ou um tom mais descontraído, adapte.\nOriente o cliente através do processo apropriado com base em sua solicitação.\nMantenha a consistência na comunicação para que a transição entre humano e assistente seja imperceptível.\nA data atual é {{ $now }}.\n\n📌 Você deve identificar a planta. \nSegue abaixo a lista das plantas com o seu respectivo código [plant_code] e [plant_name]:\n1 - FILIAL Timóteo\n2 - FILIAL João Monlevade\n3 - FILIAL Governando Valadares\n5 - FILIAL OURO BRANCO\n8 - FILIAL SANTANA DO PARAÍSO\n\n🔄 Fluxo 1: Reserva de Concreto\nSe o cliente estiver solicitando uma reserva, siga estas etapas:\n\n📌 Etapa 1: Identificação do Projeto\n1️⃣ Caso o cliente tenha projetos cadastrados → Peça para ele selecionar o projeto.\n2️⃣ Caso não tenha projetos cadastrados solicite que entre em contato com o vendedor.\n\n📌 Etapa 2: Coleta de dados\nSolicite as seguintes informações, mantendo o mesmo tom da conversa:\n\n1️⃣ Data de entrega (data_entrega)\n🗓️ “Até que data você precisa receber o material?” (Verifique se é posterior à data atual).\nSalve a data no formato americado YYYY-MM-DD e quando for exibir para o usuário na confirmação ultilize o formato brasileiro DD-MM-YYYY.\n\n2️⃣ Prazo de entrega (data_hora)\n⏰ \"A que horas deseja receber o pedido?\"\n\n3️⃣ Local de entrega (data_local)\n📍 \"Usar o endereço associado ao contrato, não pergunte, somente informe e passe para proxima etapa. \nCaso o cliente deseje alterar o endereço cancele o fluxo e informe que procure o vendedor\"\n\n4️⃣ Quantidade em metros cúbicos (data_quantidade)\n🏗️ \"Quantos metros cúbicos você precisa?\"\n\n5️⃣ Tipo de concreto (data_produto)\n🔎 \"Usar o produto associado ao contrato {{ $('Loop_Project_ContactPhoneNumber').item.json.data.page_items[0].project_product[0].product.name }}\n\n6️⃣ Tipo de serviço de descarga (data_servico)\n🚛 \"Como deseja a descarga? Pode ser convencional ou bombeável.\"\n\n📌 Utilize a ferramenta \"Readymix\" para inserir os dados no banco de dados.\n\n📌Confirme com o cliente:\n\n\"Vou lhe dar um resumo do seu pedido:\n\n📆 Entrega: [data_entrega] \n🕒 Hora: [data_hora]\n📍 Localização: [data_local]\n📦 Quantidade: [data_quantidade] m³\n🏗️ Concreto: [data_produto]\n🚛 Serviço de Bomba: [data_servico]\n🏭 Central: [plant_name]\n🏭 Codigo da Central: [plant_code]\n📌 ID do pedido: [plan_id]\n\n\n\"Está tudo bem ou você quer modificar alguma coisa?\"\n\n📌 Caso o cliente confirme, registre as informações no Readymix.\n##você deve fazer pergunta por pergunta, quando você pedir a primeira para obter os dados você deve aguardar a resposta do cliente e depois fazer a próxima pergunta##\n🗣️ Tom e Estilo nas Reservas:\n✅ Profissional mas adaptado ao cliente.\n✅ Use emojis para deixar a conversa mais clara.\n✅ Sempre confirme antes de gravar dados.\n\n\n🤖 Adaptação de tom e forma de escrever\n📌 Regras para manter a consistência com a conversa anterior:\n\nSe o orador anterior usou um tom formal, o assistente deverá continuar com um tom formal.\nSe você usou abreviações ou linguagem descontraída, o assistente deverá imitar esse estilo.\nSe o cliente usou emojis ou expressões informais, o assistente também pode usá-los.\n📌 Exemplo de mudança de tom:\n\n👤 Humano: \"Olá, bom dia, em que posso te ajudar?\"\n👤 Cliente: “Olá, preciso fazer uma reserva.”\n🤖 Assistente: \"Claro! Para que data você quer?\"\n\n👤 Humano: \"Ei, como vai? O que você precisa?\"\n👤 Cliente: “Olá, preciso fazer uma reserva.”\n🤖 Assistente: \"Vamos, me diga em que data vou agendar para você.\"\n\n📌 Integração com n8n\n📌 Caso detecte uma reserva, responda “VERDADEIRO” e continue a conversa.\n📌 Se em nenhum momento for mencionada reserva, responda “FALSO”.\n📌 Se você já retornou “TRUE”, continue retornando “TRUE” até que o processo seja concluído.\n📌 Quando o assistente responsável no n8n terminar sua parte, pare de responder \"VERDADEIRO\".\n\n\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        460,
        220
      ],
      "id": "ff38a9a0-8674-4479-80ed-b2738f916eca",
      "name": "Assist_IA"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        280,
        540
      ],
      "id": "b135f455-c62f-4ed8-a3bc-a227a5c44b7d",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "P34Q5LzomCLBCF7A",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={\n\n}",
        "sessionTTL": 300,
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        400,
        640
      ],
      "id": "f779e699-9dbd-48a2-aa6d-1314c7483958",
      "name": "Redis Chat Memory1",
      "credentials": {
        "redis": {
          "id": "R3gMrcjTPNyFGMqg",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        840,
        220
      ],
      "id": "e3083fbc-affd-4d07-b544-a1dda431c2ef",
      "name": "Code1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Resposta a formatar:  {{ $json.output }}",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1100,
        140
      ],
      "id": "3e359f34-618a-4351-9133-6b706e95510f",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "options": {
          "prompt": "Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        1220,
        360
      ],
      "id": "66cf6347-cb68-49e8-8047-60df7e581615",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1080,
        380
      ],
      "id": "3873ddcc-863a-4d06-b240-92653eea7b22",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "P34Q5LzomCLBCF7A",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"resposta\": \n    {\n      \"parte_1\": \"Conteúdo da primeira parte da resposta.\",\n      \"parte_2\": \"Conteúdo da segunda parte da resposta.\",\n      \"parte_3\": \"Conteúdo da terceira parte da resposta. (Opcional)\"\n    }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1380,
        520
      ],
      "id": "aae4a43c-9c04-47e7-aa5f-a834f23f05ec",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1180,
        560
      ],
      "id": "bd1a94f8-a6f9-4a97-9d09-50357622842f",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "P34Q5LzomCLBCF7A",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1800,
        220
      ],
      "id": "3d13d523-4da9-445e-9b68-e64d6fe0b44a",
      "name": "Wait",
      "webhookId": "599097fb-2b9a-40b1-a4a9-75a7e3c85640"
    },
    {
      "parameters": {
        "resource": "Chatting",
        "operation": "Send Text",
        "session": "={{ $('Captura_Mensagem').item.json.session }}",
        "chatId": "={{ $('Captura_Mensagem').item.json.from }}",
        "text": "={{ $json.output.resposta.parte_1 }}",
        "requestOptions": {}
      },
      "type": "@devlikeapro/n8n-nodes-waha.WAHA",
      "typeVersion": 202502,
      "position": [
        1640,
        220
      ],
      "id": "15bdb09c-7739-47fb-ba6a-0593a10b78c7",
      "name": "Resposta_Parte1",
      "credentials": {
        "wahaApi": {
          "id": "x51fih2shQhRra4Q",
          "name": "WAHA account"
        }
      }
    },
    {
      "parameters": {
        "resource": "Chatting",
        "operation": "Send Text",
        "session": "={{ $('Captura_Mensagem').item.json.session }}",
        "chatId": "={{ $('Captura_Mensagem').item.json.from }}",
        "text": "={{ $('Basic LLM Chain').item.json.output.resposta.parte_2 }}",
        "requestOptions": {}
      },
      "type": "@devlikeapro/n8n-nodes-waha.WAHA",
      "typeVersion": 202502,
      "position": [
        1960,
        220
      ],
      "id": "f217add1-706e-4eea-9b47-2ef8526fb953",
      "name": "Resposta_Parte2",
      "credentials": {
        "wahaApi": {
          "id": "x51fih2shQhRra4Q",
          "name": "WAHA account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2120,
        220
      ],
      "id": "b378a8f1-05d5-4695-a75e-1173e54cce81",
      "name": "Wait1",
      "webhookId": "785ebcd2-5b09-476b-839d-3c1a3ed24e38"
    },
    {
      "parameters": {
        "resource": "Chatting",
        "operation": "Send Text",
        "session": "={{ $('Captura_Mensagem').item.json.session }}",
        "chatId": "={{ $('Captura_Mensagem').item.json.from }}",
        "text": "={{ $('Basic LLM Chain').item.json.output.resposta.parte_3 }}",
        "requestOptions": {}
      },
      "type": "@devlikeapro/n8n-nodes-waha.WAHA",
      "typeVersion": 202502,
      "position": [
        2280,
        220
      ],
      "id": "712b57e2-0b51-447f-a1c4-26af0399a55f",
      "name": "Resposta_Parte3",
      "credentials": {
        "wahaApi": {
          "id": "x51fih2shQhRra4Q",
          "name": "WAHA account"
        }
      }
    },
    {
      "parameters": {
        "resource": "Chatting",
        "operation": "Send Text",
        "session": "={{ $('Captura_Mensagem').item.json.session }}",
        "chatId": "={{ $('Captura_Mensagem').item.json.from }}",
        "text": "=Programar Concreto",
        "requestOptions": {}
      },
      "type": "@devlikeapro/n8n-nodes-waha.WAHA",
      "typeVersion": 202502,
      "position": [
        0,
        0
      ],
      "id": "bee56950-5015-44c8-9199-1a05d550de21",
      "name": "Texto_Teste",
      "disabled": true
    },
    {
      "parameters": {
        "url": "={{ $('WAHA Trigger').item.json.payload._data.message.audioMessage.url }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -440,
        500
      ],
      "id": "5544f75a-4595-4fb9-9cb8-17456b164998",
      "name": "Baixar_Audio",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -200,
        500
      ],
      "id": "9df24498-5e1d-41b7-a511-6ef57fa02b2c",
      "name": "Extract from File",
      "disabled": true
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        0,
        500
      ],
      "id": "90b8d78a-bc28-402d-bcf1-978c6a11e9a8",
      "name": "OpenAI",
      "disabled": true
    },
    {
      "parameters": {
        "tableId": "n8n",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "teste"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1680,
        820
      ],
      "id": "e82a520f-0d03-4e66-b4e5-dbd197334633",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "e5VzI3gIx8zbm5mb",
          "name": "Supabase account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "n8n",
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2000,
        800
      ],
      "id": "3b844621-323a-4bbf-8e30-41f57c442fc9",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "e5VzI3gIx8zbm5mb",
          "name": "Supabase account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "Chatting",
        "operation": "Send Text",
        "session": "={{ $('WAHA Trigger').item.json.session }}",
        "chatId": "={{ $('WAHA Trigger').item.json.payload.from }}",
        "text": "=ID gerado: v{{ $json.id }}",
        "requestOptions": {}
      },
      "type": "@devlikeapro/n8n-nodes-waha.WAHA",
      "typeVersion": 202502,
      "position": [
        -1460,
        820
      ],
      "id": "1948fa7e-305b-4d2e-bc9e-87912cbf4841",
      "name": "WAHA",
      "credentials": {
        "wahaApi": {
          "id": "x51fih2shQhRra4Q",
          "name": "WAHA account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://integration.loop4.io/api/sync/plans-reservations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"date\": \"{fecha_loop}\",\n  \"plant_code\": \"PL-RES\",\n  \"quantity\": \"{quantidade_loop}\",\n  \"notes\": \"{dados_loop}\",\n  \"trip_max_vol\": 8,\n  \"first_arrival_at\": \"{inicio_loop}\",\n  \"truck_interval\": 0,\n  \"back_time\": 0,\n  \"go_time\": 0,\n  \"unload_time\": 0,\n  \"load_time\": 0\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        740,
        780
      ],
      "id": "f35ea13c-4d08-462e-a8a9-ccffc4841614",
      "name": "Loop",
      "credentials": {
        "httpHeaderAuth": {
          "id": "cxexuqhR4R8NRjo6",
          "name": "Header Auth account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "Chatting",
        "operation": "Send Text",
        "session": "={{ $('Captura_Mensagem').item.json.session }}",
        "chatId": "={{ $('Captura_Mensagem').item.json.from }}",
        "text": "={{ $json.output }}",
        "requestOptions": {}
      },
      "type": "@devlikeapro/n8n-nodes-waha.WAHA",
      "typeVersion": 202502,
      "position": [
        -740,
        640
      ],
      "id": "5edb5474-c907-4314-b543-4928b86cffd5",
      "name": "Resposta_Parte",
      "credentials": {
        "wahaApi": {
          "id": "x51fih2shQhRra4Q",
          "name": "WAHA account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=ESTA É A CONVERSA: {{ $('Captura_Mensagem').item.json.mensagem }}",
        "options": {
          "systemMessage": "=🎭 Função de assistente:\nVocê é um Assistente de Análise de Mensagens que avalia cada mensagem do cliente para determinar se ela precisa:\n\nFaça uma reserva ou agendamento de entrega.\nFaça uma reclamação.\n\nEle não escolheu nenhumas das opções valida, continue a conversa respondendo a bom dia ou ola dependendo da mensagem e oriente ele de forma educada que precisa escolher uma."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1180,
        480
      ],
      "id": "2b6fa513-b470-4f63-8264-a28fa629c47e",
      "name": "AI Agent1",
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1260,
        700
      ],
      "id": "b5238574-0593-4267-bd1a-4dc062e1cdf7",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "P34Q5LzomCLBCF7A",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Captura_Mensagem').item.json.mensagem }}",
        "sessionTTL": 180,
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        -1100,
        700
      ],
      "id": "603aa3e1-36bc-4ffe-978c-8eb1d84b79ad",
      "name": "Redis Chat Memory2",
      "credentials": {
        "redis": {
          "id": "R3gMrcjTPNyFGMqg",
          "name": "Redis account 2"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://integration.loop4.io/api/sync/orders",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "=[\n    {\n        \"order_code\": \"V00002\",\n        \"delivery_date\": \"2025-05-11 03:40:00\",\n        \"plant_code\": \"{plant_code}\",\n        \"project_code\": \"547312624\",\n        \"project_name\": \"VALEMIX CONCRETOS - BLOCOS\",\n        \"project_pincode\": \"1234\",\n        \"customer_code\": \"149123\",\n        \"customer_name\": \"FILIAL SANTANA DO PARAISO\",\n        \"customer_document\": \"04.702.118/0005-46\",\n        \"customer_email\": null,\n        \"customer_number\": \"38255000\",\n        \"customer_note\": null,\n\t\t\t\t\"address_code\": \"#18\",\n        \"address_street\": \"AV VITO GAGGIATO\",\n        \"address_number\": \"0\",\n        \"address_district\": \"INDUSTRIAL\",\n        \"address_complement\": \"SN\",\n        \"address_full\": null,\n        \"city_code\": null,\n        \"city_name\": \"SANTANA DO PARAISO\",\n        \"purchase_order\": null,\n        \"usage_code\": null,\n        \"usage_name\": null,\n        \"status_code\": \"920\",\n        \"status_name\": \"INATIVO\",\n        \"status_blocked\": false,\n        \"status_color\": \"#FF0000\",\n        \"internal_notes\": \"Some internal Notes you can add here.\",\n        \"customer_notes\": \"Some customer Notes you can add here.\",\n        \"display_price\": true,\n        \"tax_code\": null,\n        \"tax_name\": null,\n        \"tax_value\": 0,\n        \"seller_code\": null,\n        \"seller_name\": null,\n        \"order_products\": [\n\t\t\t\t\t{ \n\t\t\t\t\t\t\t\"item_number\":1,\n\t\t\t\t\t\t\t\"product_code\": {{ $('Loop_Project_ContactPhoneNumber').item.json.data.page_items[0].project_product[0].product.code }},\n\t\t\t\t\t\t\t\"product_type\": 1,\n\t\t\t\t\t\t\t\"product_name\": {{ $('Loop_Project_ContactPhoneNumber').item.json.data.page_items[0].project_product[0].product.name }},\n\t\t\t\t\t\t\t\"product_list_price\": 0,\n\t\t\t\t\t\t\t\"quantity\": \"{data_quantidade}\",\n\t\t\t\t\t\t\t\"price\": {{ $('Loop_Project_ContactPhoneNumber').item.json.data.page_items[0].project_product[0].price }},\n\t\t\t\t\t\t\t\"pump_order_code\": null\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t}\n]"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        600,
        640
      ],
      "id": "1c85557e-1e76-4590-855f-582c37a67854",
      "name": "Readymix",
      "credentials": {
        "httpHeaderAuth": {
          "id": "cxexuqhR4R8NRjo6",
          "name": "Header Auth account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "WAHA Trigger": {
      "main": [
        [],
        [
          {
            "node": "Captura_Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Formata_Telefone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formata_Telefone": {
      "main": [
        [
          {
            "node": "Loop_Project_ContactPhoneNumber",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Captura_Mensagem": {
      "main": [
        [
          {
            "node": "Marca_Visualizacao",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "TipoMensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Texto_Teste",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Baixar_Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TipoMensagem": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop_Project_ContactPhoneNumber": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Assist_IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Assist_IA",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Assist_IA": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Resposta_Parte1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Resposta_Parte2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta_Parte1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta_Parte2": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Resposta_Parte3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Texto_Teste": {
      "main": [
        [
          {
            "node": "Assist_IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Baixar_Audio": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Assist_IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "WAHA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WAHA": {
      "main": [
        []
      ]
    },
    "Loop": {
      "ai_tool": [
        []
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Resposta_Parte",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Readymix": {
      "ai_tool": [
        [
          {
            "node": "Assist_IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4f13d9ce-31ce-46e9-859a-23a0dfd4742f",
  "meta": {
    "instanceId": "badc5188b69000db68bb5a183789c429759caa0da80040090ad2ce1e9b217ea0"
  },
  "id": "NC8Jo46xkpy0EILJ",
  "tags": []
}